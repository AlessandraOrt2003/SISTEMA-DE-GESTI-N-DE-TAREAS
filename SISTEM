using System;
using System.Collections.Generic;

public class Tarea
{
    public string Nombre { get; set; }
    public EstadoTarea Estado { get; set; }

    public Tarea(string nombre)
    {
        Nombre = nombre;
        Estado = EstadoTarea.Pendiente;
    }

    public override string ToString()
    {
        return $"Tarea: {Nombre}, Estado: {Estado}";
    }
}

public enum EstadoTarea
{
    Pendiente,
    Procesada
}

public enum ActionType
{
    Agregar,
    Eliminar,
    Procesar
}

public class Action
{
    public ActionType Tipo { get; set; }
    public Tarea Tarea { get; set; }

    public Action(ActionType tipo, Tarea tarea)
    {
        Tipo = tipo;
        Tarea = tarea;
    }
}


public class ListaTareas
{
    private List<Tarea> tareas = new List<Tarea>();

    public void AgregarTarea(Tarea tarea)
    {
        tareas.Add(tarea);
    }

    public void EliminarTarea(Tarea tarea)
    {
        tareas.Remove(tarea);
    }

    public Tarea BuscarTarea(string nombre)
    {
        return tareas.Find(t => t.Nombre == nombre);
    }

    public void MostrarTareas()
    {
        if (tareas.Count == 0)
        {
            Console.WriteLine("No hay tareas registradas.");
            return;
        }

        Console.WriteLine("Lista de tareas:");
        foreach (var tarea in tareas)
        {
            Console.WriteLine(tarea);
        }
    }

    public List<Tarea> ObtenerTareas()
    {
        return tareas;
    }
}

public class ColaTareas
{
    private Queue<Tarea> cola = new Queue<Tarea>();

    public void EncolarTarea(Tarea tarea)
    {
        cola.Enqueue(tarea);
    }

    public Tarea DesencolarTarea()
    {
        if (cola.Count > 0)
        {
            return cola.Dequeue();
        }
        else
        {
            Console.WriteLine("La cola está vacía.");
            return null;
        }
    }

    public void MostrarCola()
    {
        if (cola.Count == 0)
        {
            Console.WriteLine("No hay tareas pendientes en la cola.");
            return;
        }

        Console.WriteLine("Tareas pendientes en la cola:");
        foreach (var tarea in
                    cola)
        {
            Console.WriteLine(tarea);
        }
    }

    public bool EstaVacia()
    {
        return cola.Count == 0;
    }
}

public class PilaAcciones
{
    private Stack<Action> pila = new Stack<Action>();

    public void Push(Action action)
    {
        pila.Push(action);
    }

    public Action Pop()
    {
        if (pila.Count > 0)
        {
            return pila.Pop();
        }
        else
        {
            Console.WriteLine("No hay acciones para deshacer.");
            return null;
        }
    }

    public bool EstaVacia()
    {
        return pila.Count == 0;
    }

    public void MostrarPila()
    {
        if (pila.Count == 0)
        {
            Console.WriteLine("No hay acciones en la pila.");
            return;
        }

        Console.WriteLine("Acciones en la pila (para deshacer):");
        foreach (var accion in pila)
        {
            Console.WriteLine($"Tipo: {accion.Tipo}, Tarea: {accion.Tarea.Nombre}");
        }
    }
}

public class Program
{
    static ListaTareas listaTareas = new ListaTareas();
    static ColaTareas colaTareas = new ColaTareas();
    static PilaAcciones pilaAcciones = new PilaAcciones();

    public static void Main(string[] args)
    {
        bool continuar = true;

        while (continuar)
        {
            MostrarMenu();

            string opcion = Console.ReadLine();

            switch (opcion)
            {
                case "1":
                    AgregarTarea();
                    break;
                case "2":
                    MarcarTareaComoPendiente();
                    break;
                case "3":
                    ProcesarTarea();
                    break;
                case "4":
                    DeshacerUltimaAccion();
                    break;
                case "5":
                    MostrarTareas();
                    break;
                case "6":
                    MostrarCola();
                    break;
                case "7":
                    MostrarPila();
                    break;
                case "8":
                    continuar = false;
                    Console.WriteLine("Saliendo del programa.");
                    break;
                default:
                    Console.WriteLine("Opción no válida. Intente de nuevo.");
                    break;
            }

            Console.WriteLine();
        }
    }

    static void MostrarMenu()
    {
        Console.WriteLine("Sistema de Gestión de Tareas");
        Console.WriteLine("1. Agregar tarea");
        Console.WriteLine("2. Marcar tarea como pendiente");
        Console.WriteLine("3. Procesar tarea");
        Console.WriteLine("4. Deshacer última acción");
        Console.WriteLine("5. Mostrar tareas");
        Console.WriteLine("6. Mostrar cola de tareas pendientes");
        Console.WriteLine("7. Mostrar pila de acciones");
        Console.WriteLine("8. Salir");
        Console.Write("Seleccione una opción: ");
    }

    static void AgregarTarea()
    {
        Console.Write("Ingrese el nombre de la tarea: ");
        string nombre = Console.ReadLine();

        Tarea nuevaTarea = new Tarea(nombre);
        listaTareas.AgregarTarea(nuevaTarea);

        pilaAcciones.Push(new Action(ActionType.Agregar, nuevaTarea));

        Console.WriteLine("Tarea agregada.");
    }

    static void MarcarTareaComoPendiente()
    {
        Console.Write("Ingrese el nombre de la tarea a marcar como pendiente: ");
        string nombre = Console.ReadLine();

        Tarea tarea = listaTareas.BuscarTarea(nombre);

        if (tarea != null)
        {
            colaTareas.EncolarTarea(tarea);
            Console.WriteLine("Tarea agregada a la cola de pendientes.");
        }
        else
        {
            Console.WriteLine("No se encontró la tarea.");
        }
    }

    static void ProcesarTarea()
    {
        Tarea tarea = colaTareas.DesencolarTarea();

        if (tarea != null)
        {
            tarea.Estado = EstadoTarea.Procesada;
            Console.WriteLine($"Tarea '{tarea.Nombre}' procesada.");

            pilaAcciones.Push(new Action(ActionType.Procesar, tarea));
        }
        else
        {
            Console.WriteLine("No hay tareas en la cola para procesar.");
        }
    }

    static void DeshacerUltimaAccion()
    {
        Action ultimaAccion = pilaAcciones.Pop();

        if (ultimaAccion != null)
        {
            switch (ultimaAccion.Tipo)
            {
                case ActionType.Agregar:
                    listaTareas.EliminarTarea(ultimaAccion.Tarea);
                    Console.WriteLine("Se deshizo la acción de agregar tarea.");
                    break;
                case ActionType.Procesar:
                    ultimaAccion.Tarea.Estado = EstadoTarea.Pendiente;
                    colaTareas.EncolarTarea(ultimaAccion.Tarea);
                    Console.WriteLine("Se deshizo la acción de procesar tarea.");
                    break;
                default:
                    Console.WriteLine("No se puede deshacer esta acción.");
                    break;
            }
        }
        else
        {
            Console.WriteLine("No hay acciones para deshacer.");
        }
    }

    static void MostrarTareas()
    {
        listaTareas.MostrarTareas();
    }

    static void MostrarCola()
    {
        colaTareas.MostrarCola();
    }

    static void MostrarPila()
    {
        pilaAcciones.MostrarPila();
    }
}
